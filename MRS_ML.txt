import pandas as pd 
import numpy as np
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('C:\\Users\\dell\\Desktop\\links.csv', names=['user_id','item_id','rating','titmestamp'])
df = pd.read_csv('C:\\Users\\dell\\Desktop\\ratings.csv', names=['user_id','item_id','rating','titmestamp'])
df = pd.read_csv('C:\\Users\\dell\\Desktop\\tags.csv', names=['user_id','item_id','rating','titmestamp'])

df.head()

movie_titles = pd.read_csv('C:\\Users\\dell\\Desktop\\Movie_Titles.csv')
movie_titles.head()

df = pd.merge(df, Movie_Titles, on='item_id')
df.head()

df.describe()

ratings = pd.DataFrame(df.groupby('title')['rating'].mean())
ratings.head()

ratings['number_of_ratings'] = df.groupby('title')['rating'].count()
ratings.head()

import matplotlib.pyplot as plt
%matplotlib inline
ratings['rating'].hist(bins=50)

ratings['number_of_ratings'].hist(bins=60)

import seaborn as sns
sns.jointplot(x='rating', y='number_of_ratings', data=ratings)

make_movie = df.pivot_table(index='user_id', columns='title', values='rating')
make_movie.head()

example_user_rating = make_movie['Air Force One (1997)']
contact_user_rating = make_movie['Contact (1997)']

example_user_rating.head()
contact_user_rating.head()

similar_as_example=make_movie.corrwith(example_user_rating)
similar_as_example.head()

similar_to_contact = make_movie.corrwith(contact_user_rating)
similar_to_contact.head()

corr_contact = pd.DataFrame(similar_to_contact, columns=['Correlation'])
corr_contact.dropna(inplace=True)
corr_contact.head()
corr_EXPL = pd.DataFrame(similar_as_example, columns=['correlation'])
corr_EXPL.dropna(inplace=True)
corr_EXPL.head()

corr_EXPL = corr_EXPL.join(ratings['number_of_ratings'])
corr_contact = corr_contact.join(ratings['number_of_ratings'])
corr_EXPL .head()
corr_contact.head()

corr_EXPL[corr_EXPL['number_of_ratings'] > 100].sort_values(by='correlation', ascending=False).head(10)

corr_contact[corr_contact['number_of_ratings'] > 100].sort_values(by='Correlation', ascending=False).head(10)















